<!-- app/views/public/packages/new.html.erb -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Create Package - GLT Logistics</title>
  
  <link rel="icon" type="image/x-icon" href="/favicon.ico">
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
  <meta name="theme-color" content="#8b5cf6">
  
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      background: #0a0a0f;
      color: #e4e4e7;
      min-height: 100vh;
    }

    /* Animated Background */
    .animated-bg {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 0;
      overflow: hidden;
    }

    .gradient-orb {
      position: absolute;
      border-radius: 50%;
      filter: blur(80px);
      opacity: 0.3;
      animation: float 20s ease-in-out infinite;
    }

    .orb-1 {
      width: 500px;
      height: 500px;
      background: radial-gradient(circle, #8b5cf6 0%, transparent 70%);
      top: -10%;
      left: -10%;
    }

    .orb-2 {
      width: 400px;
      height: 400px;
      background: radial-gradient(circle, #a78bfa 0%, transparent 70%);
      top: 50%;
      right: -10%;
      animation-delay: 7s;
    }

    @keyframes float {
      0%, 100% { transform: translate(0, 0) scale(1); }
      33% { transform: translate(50px, -50px) scale(1.1); }
      66% { transform: translate(-30px, 30px) scale(0.9); }
    }

    .container {
      position: relative;
      z-index: 1;
      max-width: 800px;
      margin: 0 auto;
      padding: 2rem;
    }

    /* Header */
    .header {
      text-align: center;
      margin-bottom: 3rem;
    }

    .back-link {
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      color: #8b5cf6;
      text-decoration: none;
      margin-bottom: 1.5rem;
      transition: color 0.3s;
    }

    .back-link:hover {
      color: #a78bfa;
    }

    .header-title {
      font-size: 2.5rem;
      font-weight: 800;
      background: linear-gradient(135deg, #ffffff 0%, #a78bfa 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      margin-bottom: 0.5rem;
    }

    .header-subtitle {
      font-size: 1.125rem;
      color: #a1a1aa;
    }

    /* Delivery Type Badge */
    .delivery-type-badge {
      display: inline-block;
      padding: 0.5rem 1rem;
      border-radius: 20px;
      font-size: 0.875rem;
      font-weight: 600;
      margin-bottom: 1rem;
    }

    .delivery-type-badge.home { background: rgba(139, 92, 246, 0.2); color: #8b5cf6; }
    .delivery-type-badge.office { background: rgba(59, 130, 246, 0.2); color: #3b82f6; }
    .delivery-type-badge.fragile { background: rgba(249, 115, 22, 0.2); color: #f97316; }
    .delivery-type-badge.collection { background: rgba(16, 185, 129, 0.2); color: #10b981; }

    /* Form Card */
    .form-card {
      background: rgba(26, 26, 46, 0.8);
      backdrop-filter: blur(20px);
      border-radius: 20px;
      border: 1px solid rgba(139, 92, 246, 0.2);
      padding: 2rem;
      margin-bottom: 2rem;
    }

    .form-section {
      margin-bottom: 2rem;
    }

    .form-section-title {
      font-size: 1.25rem;
      font-weight: 600;
      color: #ffffff;
      margin-bottom: 1rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .form-row {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 1rem;
      margin-bottom: 1rem;
    }

    .form-group {
      margin-bottom: 1rem;
    }

    .form-label {
      display: block;
      font-size: 0.875rem;
      font-weight: 500;
      color: #a1a1aa;
      margin-bottom: 0.5rem;
    }

    .form-label.required::after {
      content: ' *';
      color: #ef4444;
    }

    .form-input,
    .form-select,
    .form-textarea {
      width: 100%;
      padding: 0.75rem 1rem;
      background: rgba(10, 10, 15, 0.6);
      border: 1px solid rgba(139, 92, 246, 0.3);
      border-radius: 8px;
      color: #ffffff;
      font-size: 1rem;
      transition: all 0.3s;
    }

    .form-input:focus,
    .form-select:focus,
    .form-textarea:focus {
      outline: none;
      border-color: #8b5cf6;
      box-shadow: 0 0 0 3px rgba(139, 92, 246, 0.1);
    }

    .form-textarea {
      min-height: 100px;
      resize: vertical;
    }

    .form-select {
      cursor: pointer;
    }

    /* Price Estimate Card */
    .price-estimate {
      background: linear-gradient(135deg, rgba(139, 92, 246, 0.1) 0%, rgba(124, 58, 237, 0.1) 100%);
      border: 2px solid rgba(139, 92, 246, 0.3);
      border-radius: 16px;
      padding: 1.5rem;
      margin: 2rem 0;
    }

    .price-estimate-title {
      font-size: 1rem;
      font-weight: 600;
      color: #a78bfa;
      margin-bottom: 1rem;
    }

    .price-breakdown {
      display: flex;
      flex-direction: column;
      gap: 0.75rem;
      margin-bottom: 1rem;
    }

    .price-line {
      display: flex;
      justify-content: space-between;
      align-items: center;
      color: #a1a1aa;
      font-size: 0.875rem;
    }

    .price-total {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding-top: 1rem;
      border-top: 1px solid rgba(139, 92, 246, 0.3);
      margin-top: 0.5rem;
    }

    .price-total-label {
      font-size: 1.125rem;
      font-weight: 600;
      color: #ffffff;
    }

    .price-total-value {
      font-size: 1.5rem;
      font-weight: 700;
      color: #8b5cf6;
    }

    .calculate-btn {
      width: 100%;
      padding: 0.75rem 1.5rem;
      background: rgba(139, 92, 246, 0.2);
      border: 1px solid #8b5cf6;
      border-radius: 8px;
      color: #8b5cf6;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s;
    }

    .calculate-btn:hover {
      background: rgba(139, 92, 246, 0.3);
    }

    /* Submit Button */
    .submit-btn {
      width: 100%;
      padding: 1rem 2rem;
      background: linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%);
      border: none;
      border-radius: 12px;
      color: #ffffff;
      font-size: 1.125rem;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s;
      box-shadow: 0 4px 16px rgba(139, 92, 246, 0.4);
    }

    .submit-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 24px rgba(139, 92, 246, 0.5);
    }

    .submit-btn:disabled {
      opacity: 0.5;
      cursor: not-allowed;
      transform: none;
    }

    /* Info Box */
    .info-box {
      background: rgba(59, 130, 246, 0.1);
      border: 1px solid rgba(59, 130, 246, 0.3);
      border-radius: 8px;
      padding: 1rem;
      margin-top: 1rem;
      display: flex;
      gap: 0.75rem;
    }

    .info-box-icon {
      color: #3b82f6;
      flex-shrink: 0;
    }

    .info-box-text {
      color: #93c5fd;
      font-size: 0.875rem;
      line-height: 1.5;
    }

    /* Loading Spinner */
    .spinner {
      display: inline-block;
      width: 20px;
      height: 20px;
      border: 3px solid rgba(255, 255, 255, 0.3);
      border-radius: 50%;
      border-top-color: #ffffff;
      animation: spin 1s ease-in-out infinite;
    }

    @keyframes spin {
      to { transform: rotate(360deg); }
    }

    .hidden {
      display: none;
    }

    /* Responsive */
    @media (max-width: 768px) {
      .container {
        padding: 1rem;
      }

      .header-title {
        font-size: 2rem;
      }

      .form-card {
        padding: 1.5rem;
      }

      .form-row {
        grid-template-columns: 1fr;
      }
    }
  </style>
</head>
<body>
  <!-- Animated Background -->
  <div class="animated-bg">
    <div class="gradient-orb orb-1"></div>
    <div class="gradient-orb orb-2"></div>
  </div>

  <div class="container">
    <!-- Header -->
    <div class="header">
      <a href="<%= public_home_path %>" class="back-link">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M19 12H5M12 19l-7-7 7-7"/>
        </svg>
        Back to Home
      </a>
      
      <div class="delivery-type-badge <%= @delivery_type %>">
        <%= @delivery_type.humanize %> Delivery
      </div>
      
      <h1 class="header-title">Create Package</h1>
      <p class="header-subtitle">Fill in the details for your <%= @delivery_type %> delivery</p>
    </div>

    <%= form_with model: @package, url: public_packages_path, method: :post, id: 'packageForm', html: { class: 'package-form' } do |f| %>
      <%= hidden_field_tag :delivery_type, @delivery_type %>
      
      <!-- Sender Information -->
      <div class="form-card">
        <div class="form-section">
          <h3 class="form-section-title">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"/>
              <circle cx="12" cy="7" r="4"/>
            </svg>
            Sender Information
          </h3>
          
          <div class="form-row">
            <div class="form-group">
              <label class="form-label required">Sender Name</label>
              <%= f.text_field :sender_name, class: 'form-input', placeholder: 'Your full name', required: true %>
            </div>
            
            <div class="form-group">
              <label class="form-label required">Sender Phone</label>
              <%= f.text_field :sender_phone, class: 'form-input', placeholder: '+254...', required: true, pattern: '^\+?254[0-9]{9}$|^0[0-9]{9}$' %>
            </div>
          </div>
          
          <div class="form-group">
            <label class="form-label">Sender Email (Optional)</label>
            <%= f.email_field :sender_email, class: 'form-input', placeholder: 'your.email@example.com' %>
          </div>
        </div>
      </div>

      <!-- Receiver Information -->
      <div class="form-card">
        <div class="form-section">
          <h3 class="form-section-title">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"/>
              <circle cx="12" cy="7" r="4"/>
            </svg>
            Receiver Information
          </h3>
          
          <div class="form-row">
            <div class="form-group">
              <label class="form-label required">Receiver Name</label>
              <%= f.text_field :receiver_name, class: 'form-input', placeholder: 'Recipient full name', required: true %>
            </div>
            
            <div class="form-group">
              <label class="form-label required">Receiver Phone</label>
              <%= f.text_field :receiver_phone, class: 'form-input', placeholder: '+254...', required: true, pattern: '^\+?254[0-9]{9}$|^0[0-9]{9}$' %>
            </div>
          </div>
          
          <div class="form-group">
            <label class="form-label">Receiver Email (Optional)</label>
            <%= f.email_field :receiver_email, class: 'form-input', placeholder: 'recipient.email@example.com' %>
          </div>
        </div>
      </div>

      <!-- Delivery-Type Specific Fields -->
      <% if @delivery_type == 'collection' %>
        <!-- Collection-Specific Fields -->
        <div class="form-card">
          <div class="form-section">
            <h3 class="form-section-title">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"/>
                <line x1="3" y1="6" x2="21" y2="6"/>
                <path d="M16 10a4 4 0 0 1-8 0"/>
              </svg>
              Collection Details
            </h3>
            
            <div class="form-row">
              <div class="form-group">
                <label class="form-label required">Shop/Store Name</label>
                <%= f.text_field :shop_name, class: 'form-input', placeholder: 'Name of shop' %>
              </div>
              
              <div class="form-group">
                <label class="form-label">Shop Contact</label>
                <%= f.text_field :shop_contact, class: 'form-input', placeholder: '+254...' %>
              </div>
            </div>
            
            <div class="form-group">
              <label class="form-label required">Collection Address</label>
              <%= f.text_area :collection_address, class: 'form-textarea', placeholder: 'Full address of collection point', rows: 3 %>
            </div>
            
            <div class="form-group">
              <label class="form-label required">Items to Collect</label>
              <%= f.text_area :items_to_collect, class: 'form-textarea', placeholder: 'Describe items to be collected', rows: 2 %>
            </div>
            
            <div class="form-group">
              <label class="form-label required">Estimated Item Value (KES)</label>
              <%= f.number_field :item_value, class: 'form-input', placeholder: '0', min: 0, step: '0.01' %>
            </div>
          </div>
        </div>
      <% elsif @delivery_type == 'fragile' %>
        <!-- Fragile-Specific Fields -->
        <div class="form-card">
          <div class="form-section">
            <h3 class="form-section-title">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"/>
                <line x1="12" y1="9" x2="12" y2="13"/>
                <line x1="12" y1="17" x2="12.01" y2="17"/>
              </svg>
              Fragile Item Details
            </h3>
            
            <div class="form-group">
              <label class="form-label required">Item Description</label>
              <%= f.text_area :item_description, class: 'form-textarea', placeholder: 'Describe the fragile items', rows: 3 %>
            </div>
            
            <div class="form-group">
              <label class="form-label">Estimated Value (KES)</label>
              <%= f.number_field :item_value, class: 'form-input', placeholder: '0', min: 0, step: '0.01' %>
            </div>
            
            <div class="form-group">
              <label class="form-label">Pickup Location</label>
              <%= f.text_field :pickup_location, class: 'form-input', placeholder: 'Where to pick up from' %>
            </div>
          </div>
        </div>
      <% end %>

      <!-- Package Details -->
      <div class="form-card">
        <div class="form-section">
          <h3 class="form-section-title">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"/>
              <polyline points="3.27 6.96 12 12.01 20.73 6.96"/>
              <line x1="12" y1="22.08" x2="12" y2="12"/>
            </svg>
            Package Details
          </h3>
          
          <div class="form-row">
            <div class="form-group">
              <label class="form-label required">Package Size</label>
              <%= f.select :package_size, 
                options_for_select([['Small', 'small'], ['Medium', 'medium'], ['Large', 'large']], @package.package_size),
                {}, 
                { class: 'form-select', required: true } 
              %>
            </div>
            
            <% if ['home', 'office', 'agent'].include?(@delivery_type) %>
              <div class="form-group">
                <label class="form-label required">Origin Area</label>
                <%= f.collection_select :origin_area_id, 
                  @form_data[:areas], 
                  :id, 
                  ->(area) { "#{area.name} - #{area.location.name}" },
                  { prompt: 'Select origin area' },
                  { class: 'form-select', required: true }
                %>
              </div>
            <% end %>
          </div>
          
          <% if ['home', 'office', 'agent'].include?(@delivery_type) %>
            <div class="form-group">
              <label class="form-label required">Destination Area</label>
              <%= f.collection_select :destination_area_id, 
                @form_data[:areas], 
                :id, 
                ->(area) { "#{area.name} - #{area.location.name}" },
                { prompt: 'Select destination area' },
                { class: 'form-select', required: true }
              %>
            </div>
          <% end %>
          
          <div class="form-group">
            <label class="form-label required">Delivery Location</label>
            <%= f.text_area :delivery_location, class: 'form-textarea', placeholder: 'Full delivery address with building details', rows: 3, required: true %>
          </div>
          
          <div class="form-group">
            <label class="form-label">Package Description</label>
            <%= f.text_area :package_description, class: 'form-textarea', placeholder: 'Brief description of package contents (optional)', rows: 2 %>
          </div>
          
          <div class="form-group">
            <label class="form-label">Special Instructions</label>
            <%= f.text_area :special_instructions, class: 'form-textarea', placeholder: 'Any special handling or delivery instructions', rows: 2 %>
          </div>
        </div>
      </div>

      <!-- Price Estimate -->
      <div class="price-estimate">
        <h3 class="price-estimate-title">Estimated Cost</h3>
        
        <button type="button" class="calculate-btn" id="calculateBtn">
          <span id="calculateText">Calculate Pricing</span>
          <span id="calculateSpinner" class="spinner hidden"></span>
        </button>
        
        <div id="priceBreakdown" class="hidden">
          <div class="price-breakdown">
            <div class="price-line">
              <span>Base Fee</span>
              <span id="baseFee">KES 0</span>
            </div>
            <div class="price-line">
              <span>Delivery Type Fee</span>
              <span id="deliveryFee">KES 0</span>
            </div>
            <div class="price-line">
              <span>Size Adjustment</span>
              <span id="sizeAdjustment">KES 0</span>
            </div>
            <div class="price-line" id="insuranceLine" style="display: none;">
              <span>Insurance</span>
              <span id="insurance">KES 0</span>
            </div>
          </div>
          
          <div class="price-total">
            <span class="price-total-label">Total Cost</span>
            <span class="price-total-value" id="totalCost">KES 0</span>
          </div>
        </div>
      </div>

      <!-- Info Box -->
      <div class="info-box">
        <div class="info-box-icon">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="12" cy="12" r="10"/>
            <line x1="12" y1="16" x2="12" y2="12"/>
            <line x1="12" y1="8" x2="12.01" y2="8"/>
          </svg>
        </div>
        <div class="info-box-text">
          After clicking "Proceed to Payment", you'll receive an M-Pesa prompt on the phone number you provided. Please complete the payment to create your package.
        </div>
      </div>

      <!-- Submit Button -->
      <button type="submit" class="submit-btn" id="submitBtn" disabled>
        <span id="submitText">Proceed to Payment</span>
        <span id="submitSpinner" class="spinner hidden"></span>
      </button>
    <% end %>
  </div>

  <!-- Payment Modal Partial -->
  <%= render 'public/packages/payment_modal' %>

  <script>
    // Form elements
    const form = document.getElementById('packageForm');
    const calculateBtn = document.getElementById('calculateBtn');
    const submitBtn = document.getElementById('submitBtn');
    const priceBreakdown = document.getElementById('priceBreakdown');
    
    let estimatedCost = 0;
    let calculatedBreakdown = null;

    // Calculate pricing
    calculateBtn.addEventListener('click', async function() {
      const calculateText = document.getElementById('calculateText');
      const calculateSpinner = document.getElementById('calculateSpinner');
      
      calculateText.classList.add('hidden');
      calculateSpinner.classList.remove('hidden');
      
      const formData = new FormData(form);
      const data = {
        delivery_type: formData.get('delivery_type'),
        package_size: formData.get('package[package_size]'),
        origin_area_id: formData.get('package[origin_area_id]'),
        destination_area_id: formData.get('package[destination_area_id]'),
        item_value: formData.get('package[item_value]')
      };
      
      try {
        const response = await fetch('/public/packages/calculate_pricing', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
          },
          body: JSON.stringify(data)
        });
        
        const result = await response.json();
        
        if (result.success) {
          estimatedCost = result.data.total_cost;
          calculatedBreakdown = result.data.breakdown;
          
          // Update UI
          document.getElementById('baseFee').textContent = `KES ${calculatedBreakdown.base_fee}`;
          document.getElementById('deliveryFee').textContent = `KES ${calculatedBreakdown.delivery_type_fee}`;
          document.getElementById('sizeAdjustment').textContent = `KES ${calculatedBreakdown.size_adjustment}`;
          document.getElementById('totalCost').textContent = `KES ${estimatedCost.toLocaleString()}`;
          
          // Show/hide insurance line
          const insuranceLine = document.getElementById('insuranceLine');
          if (calculatedBreakdown.insurance > 0) {
            document.getElementById('insurance').textContent = `KES ${calculatedBreakdown.insurance}`;
            insuranceLine.style.display = 'flex';
          } else {
            insuranceLine.style.display = 'none';
          }
          
          priceBreakdown.classList.remove('hidden');
          submitBtn.disabled = false;
        } else {
          alert('Failed to calculate pricing. Please try again.');
        }
      } catch (error) {
        console.error('Pricing calculation error:', error);
        alert('Error calculating pricing. Please try again.');
      } finally {
        calculateText.classList.remove('hidden');
        calculateSpinner.classList.add('hidden');
      }
    });

    // Form submission with M-Pesa integration
    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const submitText = document.getElementById('submitText');
      const submitSpinner = document.getElementById('submitSpinner');
      
      if (estimatedCost === 0) {
        alert('Please calculate pricing first');
        return;
      }
      
      submitText.textContent = 'Processing...';
      submitSpinner.classList.remove('hidden');
      submitBtn.disabled = true;
      
      const formData = new FormData(form);
      const senderPhone = formData.get('package[sender_phone]');
      
      // Show payment modal
      showPaymentModal(senderPhone, estimatedCost, formData);
    });

    function showPaymentModal(phoneNumber, amount, packageData) {
      const modal = document.getElementById('paymentModal');
      document.getElementById('paymentPhone').value = phoneNumber;
      document.getElementById('paymentAmount').value = amount;
      modal.style.display = 'flex';
      
      // Store package data for after payment
      window.pendingPackageData = packageData;
    }
  </script>
</body>
</html>