<!-- app/views/admin/cable_monitoring/index.html.erb -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Cable Monitoring - GLT Logistics Admin</title>
  
  <!-- Favicon Links -->
  <link rel="icon" type="image/x-icon" href="/favicon.ico">
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
  
  <!-- Theme Color -->
  <meta name="theme-color" content="#8b5cf6">
  <meta name="msapplication-TileColor" content="#8b5cf6">
  
  <style>
    * { margin: 0; padding: 0; box-sizing: border-box; }
    
    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
      background: #0a0a0f;
      color: #e4e4e7;
      min-height: 100vh;
    }
    
    .container { max-width: 1400px; margin: 0 auto; padding: 20px; }
    
    .header {
      background: linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%);
      color: white;
      padding: 30px;
      border-radius: 20px;
      margin-bottom: 30px;
      box-shadow: 0 8px 32px rgba(139, 92, 246, 0.3);
    }
    
    .header h1 { font-size: 2rem; margin-bottom: 10px; font-weight: 700; }
    .header p { opacity: 0.9; margin-bottom: 20px; }
    
    .header-actions { display: flex; gap: 10px; flex-wrap: wrap; }
    
    .btn {
      padding: 10px 20px;
      border: none;
      border-radius: 12px;
      cursor: pointer;
      font-weight: 600;
      transition: all 0.3s;
      text-decoration: none;
      display: inline-block;
    }
    
    .btn-primary {
      background: rgba(255, 255, 255, 0.2);
      color: white;
      border: 2px solid rgba(255, 255, 255, 0.3);
    }
    
    .btn-primary:hover {
      background: rgba(255, 255, 255, 0.3);
      transform: translateY(-2px);
    }
    
    .btn-success {
      background: linear-gradient(135deg, #10b981 0%, #059669 100%);
      color: white;
    }
    
    .btn-success:hover { transform: translateY(-2px); box-shadow: 0 8px 24px rgba(16, 185, 129, 0.3); }
    
    .auto-refresh {
      margin-top: 15px;
      display: flex;
      align-items: center;
      gap: 10px;
    }
    
    .auto-refresh input { width: 18px; height: 18px; cursor: pointer; }
    .auto-refresh label { cursor: pointer; }
    
    .stats-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 20px;
      margin-bottom: 30px;
    }
    
    .stat-card {
      background: rgba(139, 92, 246, 0.1);
      border: 1px solid rgba(139, 92, 246, 0.3);
      border-radius: 20px;
      padding: 25px;
      transition: all 0.3s;
    }
    
    .stat-card:hover {
      background: rgba(139, 92, 246, 0.15);
      border-color: rgba(139, 92, 246, 0.5);
      transform: translateY(-4px);
    }
    
    .stat-card h3 {
      font-size: 0.9rem;
      color: #a1a1aa;
      margin-bottom: 10px;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }
    
    .stat-card .number {
      font-size: 2.5rem;
      font-weight: 800;
      background: linear-gradient(135deg, #8b5cf6 0%, #a78bfa 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }
    
    .stat-card.online .number { background: linear-gradient(135deg, #10b981 0%, #34d399 100%); -webkit-background-clip: text; -webkit-text-fill-color: transparent; }
    .stat-card.offline .number { background: linear-gradient(135deg, #ef4444 0%, #f87171 100%); -webkit-background-clip: text; -webkit-text-fill-color: transparent; }
    
    .section {
      background: rgba(10, 10, 15, 0.8);
      border: 1px solid rgba(139, 92, 246, 0.2);
      padding: 30px;
      border-radius: 20px;
      margin-bottom: 20px;
      backdrop-filter: blur(20px);
    }
    
    .section h2 {
      margin-bottom: 20px;
      color: #f4f4f5;
      font-size: 1.5rem;
      font-weight: 700;
    }
    
    .refresh-btn { margin-bottom: 20px; }
    
    .connections-table {
      width: 100%;
      border-collapse: collapse;
      background: rgba(139, 92, 246, 0.05);
      border-radius: 12px;
      overflow: hidden;
    }
    
    .connections-table th {
      background: rgba(139, 92, 246, 0.2);
      padding: 15px;
      text-align: left;
      font-weight: 600;
      color: #f4f4f5;
      font-size: 0.9rem;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }
    
    .connections-table td {
      padding: 15px;
      border-bottom: 1px solid rgba(139, 92, 246, 0.1);
      color: #e4e4e7;
    }
    
    .connections-table tr:hover {
      background: rgba(139, 92, 246, 0.1);
    }
    
    .status-indicator {
      display: inline-block;
      width: 10px;
      height: 10px;
      border-radius: 50%;
      margin-right: 8px;
      animation: pulse 2s infinite;
    }
    
    .status-online { background: #10b981; box-shadow: 0 0 10px #10b981; }
    .status-offline { background: #ef4444; box-shadow: 0 0 10px #ef4444; }
    
    @keyframes pulse {
      0%, 100% { opacity: 1; }
      50% { opacity: 0.5; }
    }
    
    .test-broadcast {
      background: rgba(245, 158, 11, 0.1);
      padding: 25px;
      border-radius: 15px;
      border: 2px solid rgba(245, 158, 11, 0.3);
    }
    
    .test-broadcast h2 { color: #fbbf24; margin-bottom: 10px; }
    .test-broadcast p { color: #a1a1aa; margin-bottom: 15px; }
    
    .test-form {
      display: flex;
      gap: 10px;
      margin-top: 15px;
      flex-wrap: wrap;
    }
    
    .test-form input {
      flex: 1;
      min-width: 200px;
      padding: 12px;
      border: 2px solid rgba(139, 92, 246, 0.3);
      border-radius: 10px;
      background: rgba(10, 10, 15, 0.8);
      color: #e4e4e7;
      font-size: 14px;
    }
    
    .test-form input:focus {
      outline: none;
      border-color: #8b5cf6;
      box-shadow: 0 0 0 3px rgba(139, 92, 246, 0.1);
    }
    
    .empty-state {
      text-align: center;
      padding: 60px 20px;
      color: #a1a1aa;
    }
    
    .empty-state-icon { font-size: 3rem; opacity: 0.3; margin-bottom: 15px; }
    
    @media (max-width: 768px) {
      .stats-grid { grid-template-columns: repeat(2, 1fr); }
      .header-actions { flex-direction: column; }
      .btn { width: 100%; text-align: center; }
    }
  </style>
  <script>
    let refreshInterval;
    
    function toggleAutoRefresh(checkbox) {
      if (checkbox.checked) {
        refreshInterval = setInterval(() => {
          location.reload();
        }, 5000);
      } else {
        clearInterval(refreshInterval);
      }
    }
    
    function fetchConnections() {
      fetch('/admin/cable/connections')
        .then(res => res.json())
        .then(data => {
          document.getElementById('connections-count').textContent = data.total_connections;
          updateConnectionsTable(data.connections);
        });
    }
    
    function fetchSubscriptions() {
      fetch('/admin/cable/subscriptions')
        .then(res => res.json())
        .then(data => {
          document.getElementById('subscriptions-count').textContent = data.total_subscriptions || 0;
          updateSubscriptionsTable(data.by_channel);
        });
    }
    
    function updateConnectionsTable(connections) {
      const tbody = document.getElementById('connections-tbody');
      tbody.innerHTML = connections.map(conn => `
        <tr>
          <td><span class="status-indicator status-online"></span>${conn.user_email || 'Anonymous'}</td>
          <td>${conn.user_id || 'N/A'}</td>
          <td>${new Date(conn.connected_at).toLocaleString()}</td>
        </tr>
      `).join('');
    }
    
    function updateSubscriptionsTable(channels) {
      const tbody = document.getElementById('subscriptions-tbody');
      if (Object.keys(channels).length === 0) {
        tbody.innerHTML = '<tr><td colspan="2" style="text-align: center; color: #9ca3af; padding: 20px;">No active subscriptions</td></tr>';
      } else {
        tbody.innerHTML = Object.entries(channels).map(([channel, count]) => `
          <tr>
            <td>${channel}</td>
            <td>${count}</td>
          </tr>
        `).join('');
      }
    }
  </script>
</head>
<body>
  <div class="container">
    <div class="header">
      <h1>‚ö° ActionCable Monitoring</h1>
      <p>Real-time WebSocket connection monitoring and management</p>
      <div class="header-actions">
        <a href="<%= admin_root_path %>" class="btn btn-primary">‚Üê Back to Admin</a>
        <button onclick="location.reload()" class="btn btn-success">üîÑ Refresh</button>
      </div>
      <div class="auto-refresh">
        <input type="checkbox" id="autoRefresh" onchange="toggleAutoRefresh(this)">
        <label for="autoRefresh">Auto-refresh every 5 seconds</label>
      </div>
    </div>

    <div class="stats-grid">
      <div class="stat-card online">
        <h3>Active Connections</h3>
        <div class="number" id="connections-count"><%= @stats[:total_connections] || 0 %></div>
      </div>
      <div class="stat-card">
        <h3>Total Subscriptions</h3>
        <div class="number" id="subscriptions-count"><%= @stats[:total_subscriptions] || 0 %></div>
      </div>
      <div class="stat-card">
        <h3>Worker Pool Size</h3>
        <div class="number"><%= @stats[:worker_pool_size] || 4 %></div>
      </div>
      <div class="stat-card <%= @stats[:redis_connected] ? 'online' : 'offline' %>">
        <h3>Redis Status</h3>
        <div class="number"><%= @stats[:redis_connected] ? 'Connected' : 'Disconnected' %></div>
      </div>
    </div>

    <div class="section">
      <h2>üîó Active Connections</h2>
      <button onclick="fetchConnections()" class="btn btn-success refresh-btn">Refresh Connections</button>
      
      <% if @connections.any? %>
        <table class="connections-table">
          <thead>
            <tr>
              <th>User</th>
              <th>User ID</th>
              <th>Connected At</th>
            </tr>
          </thead>
          <tbody id="connections-tbody">
            <% @connections.each do |conn| %>
              <tr>
                <td>
                  <span class="status-indicator status-online"></span>
                  <%= conn[:user]&.email || 'Anonymous' %>
                </td>
                <td><%= conn[:user]&.id || 'N/A' %></td>
                <td><%= conn[:started_at]&.strftime('%Y-%m-%d %H:%M:%S') || 'Unknown' %></td>
              </tr>
            <% end %>
          </tbody>
        </table>
      <% else %>
        <div class="empty-state">
          <div class="empty-state-icon">üîå</div>
          <p>No active connections</p>
        </div>
      <% end %>
    </div>

    <div class="section">
      <h2>üì° Active Subscriptions by Channel</h2>
      <button onclick="fetchSubscriptions()" class="btn btn-success refresh-btn">Refresh Subscriptions</button>
      
      <% if @subscriptions.any? %>
        <table class="connections-table">
          <thead>
            <tr>
              <th>Channel</th>
              <th>Subscription Count</th>
            </tr>
          </thead>
          <tbody id="subscriptions-tbody">
            <% @subscriptions.each do |channel, count| %>
              <tr>
                <td><%= channel %></td>
                <td><%= count %></td>
              </tr>
            <% end %>
          </tbody>
        </table>
      <% else %>
        <div class="empty-state">
          <div class="empty-state-icon">üì°</div>
          <p>No active subscriptions</p>
        </div>
      <% end %>
    </div>

    <div class="section test-broadcast">
      <h2>üß™ Test Broadcast</h2>
      <p>Send a test message to a specific channel to verify ActionCable is working.</p>
      
      <form action="/admin/cable/test_broadcast" method="post" class="test-form">
        <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
        <input type="text" name="channel" placeholder="Channel name (e.g., test_channel)" required>
        <input type="text" name="message" placeholder="Test message" required>
        <button type="submit" class="btn btn-success">Send Test Broadcast</button>
      </form>
    </div>
  </div>
</body>
</html>