<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="csrf-token" content="<%= form_authenticity_token %>">
    <title>SMS Messaging - Admin Panel</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: 'Segoe UI', sans-serif; background: #f5f5f5; }
        
        .container { max-width: 1400px; margin: 0 auto; padding: 20px; }
        .header { background: linear-gradient(135deg, #06b6d4 0%, #0891b2 100%); color: white; padding: 30px; border-radius: 10px; margin-bottom: 30px; }
        .header h1 { font-size: 2rem; margin-bottom: 10px; }
        
        .section { background: white; padding: 30px; border-radius: 10px; margin-bottom: 20px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
        .section h2 { margin-bottom: 20px; color: #1f2937; }
        
        .form-group { margin-bottom: 20px; }
        .form-group label { display: block; margin-bottom: 8px; font-weight: 600; color: #374151; }
        .form-group input,
        .form-group textarea { 
            width: 100%; 
            padding: 12px; 
            border: 1px solid #d1d5db; 
            border-radius: 5px; 
            font-size: 1rem;
            font-family: 'Segoe UI', sans-serif;
        }
        .form-group input:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: #06b6d4;
            box-shadow: 0 0 0 3px rgba(6, 182, 212, 0.1);
        }
        .form-group small { display: block; margin-top: 5px; color: #6b7280; font-size: 0.875rem; }
        
        .btn { padding: 12px 24px; border: none; border-radius: 5px; cursor: pointer; text-decoration: none; display: inline-block; font-weight: 600; transition: all 0.3s; }
        .btn-primary { background: #06b6d4; color: white; }
        .btn-primary:hover { background: #0891b2; }
        .btn-success { background: #10b981; color: white; }
        .btn-success:hover { background: #059669; }
        .btn-primary:disabled { background: #9ca3af; cursor: not-allowed; }
        
        .btn-full { width: 100%; font-size: 1rem; }
        
        .spinner { display: inline-block; width: 20px; height: 20px; border: 3px solid rgba(255,255,255,.3); border-radius: 50%; border-top-color: white; animation: spin 1s ease-in-out infinite; }
        @keyframes spin { to { transform: rotate(360deg); } }
        
        .toast {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: white;
            padding: 16px 20px;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            display: flex;
            align-items: center;
            gap: 12px;
            visibility: hidden;
            opacity: 0;
            transform: translateY(20px);
            transition: all 0.3s;
            z-index: 1000;
            max-width: 400px;
        }
        .toast.show {
            visibility: visible;
            opacity: 1;
            transform: translateY(0);
        }
        .toast-icon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-shrink: 0;
        }
        .toast-icon.success { background: #d1fae5; color: #10b981; }
        .toast-icon.error { background: #fee2e2; color: #ef4444; }
        .toast-message { color: #374151; font-weight: 500; }
        
        .info-box {
            background: #dbeafe;
            padding: 20px;
            border-radius: 10px;
            border-left: 4px solid #3b82f6;
            margin-bottom: 20px;
        }
        .info-box h3 { color: #1e40af; margin-bottom: 10px; }
        .info-box p { color: #1e3a8a; line-height: 1.6; }
    </style>
</head>
<body>

    <div class="container">
        <div class="header">
            <h1>üì± SMS Messaging</h1>
            <p>Send test messages via Africa's Talking API</p>
            <div style="margin-top: 20px;">
                <a href="<%= admin_root_path %>" class="btn btn-primary">‚Üê Back to Admin</a>
            </div>
        </div>

        <div class="info-box">
            <h3>‚ÑπÔ∏è About SMS Messaging</h3>
            <p>Use this interface to send test SMS messages through the Africa's Talking API. Enter a phone number with country code (e.g., +254712345678) and your message to test the SMS delivery system.</p>
        </div>

        <div class="section">
            <h2>üì® Send SMS Message</h2>
            
            <form id="smsForm">
                <div class="form-group">
                    <label for="phone_number">Phone Number</label>
                    <input 
                        type="tel" 
                        id="phone_number" 
                        name="phone_number" 
                        placeholder="+2547XXXXXXXX" 
                        required
                    >
                    <small>Include country code (e.g., +254 for Kenya, +256 for Uganda)</small>
                </div>

                <div class="form-group">
                    <label for="message">Message</label>
                    <textarea 
                        id="message" 
                        name="message" 
                        rows="5" 
                        required
                        placeholder="Enter your message here..."
                    >Hi üëã Glen, your package has been dropped at our agent and is being processed for delivery.</textarea>
                    <small>SMS messages are typically limited to 160 characters per segment</small>
                </div>

                <button type="submit" id="submitBtn" class="btn btn-success btn-full">
                    <span id="btnText">üì§ Send Message</span>
                    <span id="btnSpinner" style="display: none;">
                        <span class="spinner"></span>
                    </span>
                </button>
            </form>
        </div>
    </div>

    <!-- Toast Notification -->
    <div id="toast" class="toast">
        <div id="toast-icon" class="toast-icon success">
            <!-- Icon will be set by JS -->
        </div>
        <div id="toast-message" class="toast-message">Message sent successfully.</div>
    </div>

    <script>
        const smsForm = document.getElementById('smsForm');
        const submitBtn = document.getElementById('submitBtn');
        const btnText = document.getElementById('btnText');
        const btnSpinner = document.getElementById('btnSpinner');
        const toast = document.getElementById('toast');
        const toastIcon = document.getElementById('toast-icon');
        const toastMessage = document.getElementById('toast-message');

        smsForm.addEventListener('submit', async (event) => {
            event.preventDefault();

            // Show loading state
            btnText.style.display = 'none';
            btnSpinner.style.display = 'inline-block';
            submitBtn.disabled = true;

            const formData = new FormData(smsForm);
            const data = {
                phone_number: formData.get('phone_number'),
                message: formData.get('message'),
            };

            try {
                const response = await fetch('/admin/sms_messaging', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]')?.getAttribute('content') || ''
                    },
                    body: JSON.stringify(data)
                });

                const result = await response.json();

                if (response.ok && result.success) {
                    showToast('success', result.message || 'SMS sent successfully!');
                    // Clear the phone number field on success
                    document.getElementById('phone_number').value = '';
                } else {
                    throw new Error(result.error || 'An unknown error occurred.');
                }

            } catch (error) {
                console.error('Error sending SMS:', error);
                showToast('error', error.message);
            } finally {
                // Restore button state
                btnText.style.display = 'inline';
                btnSpinner.style.display = 'none';
                submitBtn.disabled = false;
            }
        });

        function showToast(type, message) {
            // Reset classes
            toastIcon.innerHTML = '';
            toastIcon.className = 'toast-icon';

            if (type === 'success') {
                toastIcon.classList.add('success');
                toastIcon.innerHTML = `
                    <svg width="20" height="20" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                    </svg>`;
            } else {
                toastIcon.classList.add('error');
                toastIcon.innerHTML = `
                    <svg width="20" height="20" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                    </svg>`;
            }
            
            toastMessage.textContent = message;
            toast.classList.add('show');

            setTimeout(() => {
                toast.classList.remove('show');
            }, 5000);
        }
    </script>

</body>
</html>